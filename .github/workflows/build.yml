name: Continuous Integration

on:
  push:
    branches: main

jobs:
  BuildAndPush:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push quiz
        id: docker_build_quiz_service
        uses: docker/build-push-action@v2
        with:
          context: ./services/quiz
          target: production
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/challenges2-quiz-service:latest

      - name: Build and push application
        id: docker_build_application_service
        uses: docker/build-push-action@v2
        with:
          context: ./services/application
          target: production
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/challenges2-app-service:latest

      - name: Build and push mailing
        id: docker_build_mailing_service
        uses: docker/build-push-action@v2
        with:
          context: ./services/mailing
          target: production
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/challenges2-mailing-service:latest

      - name: Build and push authentication
        id: docker_build_authentication_service
        uses: docker/build-push-action@v2
        with:
          context: ./services/authentication
          target: production
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/challenges2-auth-service:latest

      - name: Build and push api
        id: docker_build_api
        uses: docker/build-push-action@v2
        with:
          context: ./api-gateway
          target: production
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/challenges2-api:latest


      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
